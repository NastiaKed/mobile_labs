import 'package:flutter/material.dart';

class HomeScreen extends StatefulWidget {
  final bool showOfflineWarning;
  const HomeScreen({super.key, this.showOfflineWarning = false});

  @override
  State<HomeScreen> createState() => _HomeScreenState();
}

class _HomeScreenState extends State<HomeScreen> {
  final List<String> crochetProjects = const [
    'üå∏ –ö–æ–≤–¥—Ä–∞ –∑ –±–∞–±—É—Å–∏–Ω–∏—Ö –∫–≤–∞–¥—Ä–∞—Ç—ñ–≤',
    'üß£ –¢–µ–ø–ª–∏–π –∑–∏–º–æ–≤–∏–π —à–∞—Ä—Ñ',
    'üß∂ –ê–º—ñ–≥—É—Ä—É–º—ñ –∑–∞–π—á–∏–∫',
    'üëú –í‚Äô—è–∂–µ–Ω–∞ –±–æ—Ö–æ-—Å—É–º–∫–∞',
  ];

  @override
  void initState() {
    super.initState();
    if (widget.showOfflineWarning) {
      WidgetsBinding.instance.addPostFrameCallback((_) {
        if (mounted) {
          ScaffoldMessenger.of(context).showSnackBar(
            const SnackBar(
              content: Text(
                '‚ö†Ô∏è –ù–µ–º–∞—î –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –Ü–Ω—Ç–µ—Ä–Ω–µ—Ç—É. '
                    '–î–µ—è–∫—ñ —Ñ—É–Ω–∫—Ü—ñ—ó –º–æ–∂—É—Ç—å –±—É—Ç–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ñ.',
              ),
            ),
          );
        }
      });
    }
  }

  Future<bool> _confirmExit() async {
    final shouldExit = await showDialog<bool>(
      context: context,
      builder: (context) => AlertDialog(
        title: const Text('–í–∏—Ö—ñ–¥ –∑ –¥–æ–¥–∞—Ç–∫—É'),
        content: const Text('–í–∏ —Å–ø—Ä–∞–≤–¥—ñ —Ö–æ—á–µ—Ç–µ –≤–∏–π—Ç–∏?'),
        actions: [
          TextButton(
            onPressed: () => Navigator.of(context).pop(false),
            child: const Text('–°–∫–∞—Å—É–≤–∞—Ç–∏'),
          ),
          TextButton(
            onPressed: () => Navigator.of(context).pop(true),
            child: const Text('–í–∏–π—Ç–∏'),
          ),
        ],
      ),
    );
    return shouldExit ?? false;
  }

  @override
  Widget build(BuildContext context) {
    return PopScope(
      canPop: false,
      onPopInvokedWithResult: (didPop, result) async {
        if (!didPop) {
          final shouldExit = await _confirmExit();
          if (!context.mounted) return;
          if (shouldExit && mounted) {
            Navigator.of(context).pop();
          }
        }
      },
      child: Scaffold(
        appBar: AppBar(
          title: const Text('–ì–æ–ª–æ–≤–Ω–∞'),
          actions: [
            IconButton(
              onPressed: () => Navigator.pushNamed(context, '/profile'),
              icon: const Icon(Icons.account_circle),
            ),
          ],
        ),
        body: Padding(
          padding: const EdgeInsets.all(16),
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              const Text(
                '–õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ —É —Å–≤—ñ—Ç –≤‚Äô—è–∑–∞–Ω–Ω—è –≥–∞—á–∫–æ–º!',
                style: TextStyle(fontSize: 24, fontWeight: FontWeight.bold),
              ),
              const SizedBox(height: 10),
              const Text(
                'üí° –ü–æ—Ä–∞–¥–∞ –¥–Ω—è: –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –º–∞—Ä–∫–µ—Ä–∏ –ø–µ—Ç–µ–ª—å, '
                    '—â–æ–± –Ω–µ –∑–±–∏—Ç–∏—Å—è –≤ —É–∑–æ—Ä—ñ.',
                style: TextStyle(fontSize: 16),
              ),
              const SizedBox(height: 20),
              const Text('–ü–æ—Ç–æ—á–Ω—ñ –ø—Ä–æ—î–∫—Ç–∏:', style: TextStyle(fontSize: 20)),
              const SizedBox(height: 10),
              Expanded(
                child: ListView.builder(
                  itemCount: crochetProjects.length,
                  itemBuilder: (context, index) => Card(
                    elevation: 2,
                    margin: const EdgeInsets.symmetric(vertical: 5),
                    child: ListTile(
                      title: Text(crochetProjects[index]),
                      trailing: const Icon(Icons.chevron_right),
                      onTap: () {
                        ScaffoldMessenger.of(context).showSnackBar(
                          SnackBar(
                            content: Text(
                              '–í–∏ –≤–∏–±—Ä–∞–ª–∏: ${crochetProjects[index]}',
                            ),
                          ),
                        );
                      },
                    ),
                  ),
                ),
              ),
              Center(
                child: Column(
                  mainAxisSize: MainAxisSize.min,
                  children: [
                    ElevatedButton(
                      onPressed: () {
                        ScaffoldMessenger.of(context).showSnackBar(
                          const SnackBar(
                            content: Text('–§—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª –¥–æ–¥–∞–≤–∞–Ω–Ω—è '
                                '–ø—Ä–æ–µ–∫—Ç—É –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ'),
                          ),
                        );
                      },
                      child: const Text('‚ûï –î–æ–¥–∞—Ç–∏ –ø—Ä–æ—î–∫—Ç'),
                    ),
                    const SizedBox(height: 10),
                    ElevatedButton(
                      onPressed: () => Navigator.pushNamed(context, '/counter'),
                      child: const Text('üßµ –°–µ–Ω—Å–æ—Ä –ø–µ—Ç–µ–ª—å'),
                    ),
                  ],
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }
}
