import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:mobile_labs/home/cubit/home_cubit.dart';

class HomeScreen extends StatelessWidget {
  final bool showOfflineWarning;
  const HomeScreen({super.key, this.showOfflineWarning = false});

  Future<bool> _confirmExit(BuildContext context) async {
    final shouldExit = await showDialog<bool>(
      context: context,
      builder: (context) => AlertDialog(
        title: const Text('–í–∏—Ö—ñ–¥ –∑ –¥–æ–¥–∞—Ç–∫—É'),
        content: const Text('–í–∏ —Å–ø—Ä–∞–≤–¥—ñ —Ö–æ—á–µ—Ç–µ –≤–∏–π—Ç–∏?'),
        actions: [
          TextButton(
            onPressed: () => Navigator.of(context).pop(false),
            child: const Text('–°–∫–∞—Å—É–≤–∞—Ç–∏'),
          ),
          TextButton(
            onPressed: () => Navigator.of(context).pop(true),
            child: const Text('–í–∏–π—Ç–∏'),
          ),
        ],
      ),
    );
    return shouldExit ?? false;
  }

  @override
  Widget build(BuildContext context) {
    return BlocProvider(
      create: (_) => HomeCubit(),
      child: Builder(
        builder: (context) {
          final cubit = context.read<HomeCubit>();

          if (showOfflineWarning) {
            WidgetsBinding.instance.addPostFrameCallback((_) {
              ScaffoldMessenger.of(context).showSnackBar(
                const SnackBar(
                  content: Text(
                    '‚ö†Ô∏è –ù–µ–º–∞—î –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –Ü–Ω—Ç–µ—Ä–Ω–µ—Ç—É. '
                        '–î–µ—è–∫—ñ —Ñ—É–Ω–∫—Ü—ñ—ó –º–æ–∂—É—Ç—å –±—É—Ç–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ñ.',
                  ),
                ),
              );
            });
          }

          return PopScope(
            canPop: false,
            onPopInvokedWithResult: (didPop, result) async {
              if (!didPop) {
                final shouldExit = await _confirmExit(context);
                if (context.mounted && shouldExit) {
                  Navigator.of(context).pop();
                }
              }
            },
            child: Scaffold(
              appBar: AppBar(
                title: const Text('–ì–æ–ª–æ–≤–Ω–∞'),
                actions: [
                  IconButton(
                    onPressed: () => Navigator.pushNamed(context, '/profile'),
                    icon: const Icon(Icons.account_circle),
                  ),
                ],
              ),
              body: Padding(
                padding: const EdgeInsets.all(16),
                child: Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    const Text(
                      '–õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ —É —Å–≤—ñ—Ç –≤‚Äô—è–∑–∞–Ω–Ω—è –≥–∞—á–∫–æ–º!',
                      style: TextStyle(fontSize: 24,
                          fontWeight: FontWeight.bold,
                      ),
                    ),
                    const SizedBox(height: 10),
                    const Text(
                      'üí° –ü–æ—Ä–∞–¥–∞ –¥–Ω—è: –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –º–∞—Ä–∫–µ—Ä–∏ '
                          '–ø–µ—Ç–µ–ª—å, —â–æ–± –Ω–µ –∑–±–∏—Ç–∏—Å—è –≤ —É–∑–æ—Ä—ñ.',
                      style: TextStyle(fontSize: 16),
                    ),
                    const SizedBox(height: 20),
                    const Text('–ü–æ—Ç–æ—á–Ω—ñ –ø—Ä–æ—î–∫—Ç–∏:', style:
                    TextStyle(fontSize: 20),
                    ),
                    const SizedBox(height: 10),
                    Expanded(
                      child: BlocBuilder<HomeCubit, HomeState>(
                        builder: (context, state) {
                          return ListView.builder(
                            itemCount: state.projects.length,
                            itemBuilder: (context, index) => Card(
                              elevation: 2,
                              margin: const EdgeInsets.symmetric(vertical: 5),
                              child: ListTile(
                                title: Text(state.projects[index]),
                                trailing: const Icon(Icons.chevron_right),
                                onTap: () {
                                  cubit.selectProject(state.projects[index]);
                                  ScaffoldMessenger.of(context).showSnackBar(
                                    SnackBar(
                                      content: Text(
                                        '–í–∏ –≤–∏–±—Ä–∞–ª–∏: ${state.projects[index]}',
                                      ),
                                    ),
                                  );
                                },
                              ),
                            ),
                          );
                        },
                      ),
                    ),
                    Center(
                      child: Column(
                        mainAxisSize: MainAxisSize.min,
                        children: [
                          ElevatedButton(
                            onPressed: () {
                              ScaffoldMessenger.of(context).showSnackBar(
                                const SnackBar(
                                  content: Text
                                    ('–§—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª –¥–æ–¥–∞–≤–∞–Ω–Ω—è –ø—Ä–æ–µ–∫—Ç—É –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ'),
                                ),
                              );
                            },
                            child: const Text('‚ûï –î–æ–¥–∞—Ç–∏ –ø—Ä–æ—î–∫—Ç'),
                          ),
                          const SizedBox(height: 10),
                          ElevatedButton(
                            onPressed: () => Navigator.pushNamed(context, '/counter'),
                            child: const Text('üßµ –°–µ–Ω—Å–æ—Ä –ø–µ—Ç–µ–ª—å'),
                          ),
                        ],
                      ),
                    ),
                  ],
                ),
              ),
            ),
          );
        },
      ),
    );
  }
}
